{"version":3,"sources":["UserInfo.js","PostBody.js","PostComment.js","UserPost.js","Filtering.js","getData.js","PostList.js","App.js","index.js"],"names":["UserInfo","props","_props$user$address","user","address","suite","street","city","zipcode","geo","react_default","a","createElement","className","name","email","concat","lat","lng","PostBody","postItem","title","body","PostComment","commentItem","UserPost","src_PostBody","post","type","onClick","postIndex","showComments","comments","map","comment","src_PostComment","Filtering","placeholder","onChange","filterBy","baseDataAddress","getPosts","fetch","then","response","json","getUsers","getComments","PostList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","setState","isLoading","Promise","all","_ref","_ref2","slicedToArray","posts","users","preparedPosts","objectSpread","find","id","userId","filter","postId","listOfPosts","isLoaded","visiblePosts","Array","length","fill","showCommentClick","index","prevState","newIndexes","toConsumableArray","event","updatedList","state","item","toLowerCase","search","target","value","_this2","disabled","src_Filtering","i","key","src_UserInfo","src_UserPost","React","Component","App","src_PostList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.381eb92d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction UserInfo(props) {\n  const {\n    suite,\n    street,\n    city,\n    zipcode,\n    geo,\n  } = props.user.address;\n\n  return (\n    <div className=\"app-card_item\">\n      <div className=\"user-info\">\n        <h1 className=\"user-info__name\">\n          {props.user.name}\n        </h1>\n\n        <div className=\"user-info__contact-info\">\n          <p>{props.user.email}</p>\n\n          <p className=\"contact-info__address\">\n            {`\n              ${suite}\n              ${street}\n              ${city}\n              ${zipcode}\n\n              (${geo.lat}, ${geo.lng})\n            `}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nUserInfo.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n};\n\nexport default UserInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PostBody(props) {\n  return (\n    <div className=\"user-post__body\">\n      <h2 className=\"user-post__body-title\">{props.postItem.title}</h2>\n      <p className=\"user-post__body-text\">{props.postItem.body}</p>\n      <hr className=\"user-post__line-break\" />\n    </div>\n  );\n}\n\nPostBody.propTypes = {\n  postItem: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default PostBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PostComment(props) {\n  return (\n    <div className=\"user-post__comment\">\n      <p className=\"comment-name\">{props.commentItem.name}</p>\n      <p className=\"comment-email\">{props.commentItem.email}</p>\n      <p className=\"comment-text\">{props.commentItem.body}</p>\n    </div>\n  );\n}\n\nPostComment.propTypes = {\n  commentItem: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default PostComment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostBody from './PostBody';\nimport PostComment from './PostComment';\n\nfunction UserPost(props) {\n  return (\n    <div>\n      <PostBody\n        postItem={props.post}\n      />\n\n      <button\n        type=\"button\"\n        className=\"user-post__body-comment-label\"\n        onClick={() => props.onClick(props.postIndex)}\n      >\n        Comments â¯†\n      </button>\n\n      {props.showComments && (\n        props.post.comments.map(comment => (\n          <PostComment\n            commentItem={comment}\n          />\n        ))\n      )}\n    </div>\n  );\n}\n\nUserPost.propTypes = {\n  post: PropTypes.shape({\n    comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  showComments: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  postIndex: PropTypes.number.isRequired,\n};\n\nexport default UserPost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filtering(props) {\n  return (\n    <div>\n      <input\n        type=\"search\"\n        placeholder=\"Filter by...\"\n        onChange={props.filterBy}\n        className=\"filter-input\"\n      />\n    </div>\n  );\n}\n\nFiltering.propTypes = {\n  filterBy: PropTypes.func.isRequired,\n};\n\nexport default Filtering;\n","const baseDataAddress = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = () => {\n  return fetch(`${baseDataAddress}/posts`)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => {\n  return fetch(`${baseDataAddress}/users`)\n    .then(response => response.json());\n};\n\nexport const getComments = () => {\n  return fetch(`${baseDataAddress}/comments`)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport UserInfo from './UserInfo';\nimport UserPost from './UserPost';\nimport Filtering from './Filtering';\nimport { getPosts, getUsers, getComments } from './getData';\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfPosts: [],\n      visiblePosts: [],\n      isLoaded: false,\n      isLoading: false,\n      showComments: [],\n    };\n  }\n\n  loadData = () => {\n    this.setState({ isLoading: true });\n\n    Promise.all([getPosts(), getUsers(), getComments()])\n      .then(([posts, users, comments]) => {\n        const preparedPosts = posts.map(post => (\n          {\n            ...post,\n            user: users.find(user => user.id === post.userId),\n            comments: comments.filter(comment => post.id === comment.postId),\n          }\n        ));\n\n        this.setState({\n          listOfPosts: preparedPosts,\n          isLoaded: true,\n          isLoading: false,\n          visiblePosts: preparedPosts,\n          showComments: Array(preparedPosts.length).fill(false),\n        });\n      });\n  }\n\n  showCommentClick = (index) => {\n    this.setState((prevState) => {\n      const newIndexes = [...prevState.showComments];\n      newIndexes[index] = !newIndexes[index];\n      return { showComments: newIndexes };\n    });\n  }\n\n  filterBy = (event) => {\n    let updatedList = this.state.listOfPosts;\n    updatedList = updatedList.filter((item) => {\n      const postData = item.title + item.body;\n      return postData.toLowerCase().search(\n        event.target.value.toLowerCase()\n      ) !== -1;\n    });\n    this.setState({ visiblePosts: updatedList });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        { !this.state.isLoaded && (\n          <button\n            onClick={this.loadData}\n            type=\"button\"\n            disabled={this.state.isLoading}\n            className=\"load-button\"\n          >\n            {this.state.isLoading ? 'Loading...' : 'LOAD'}\n          </button>\n        )}\n        { this.state.isLoaded && (\n          <Filtering\n            isLoaded={this.state.isLoaded}\n            filterBy={this.filterBy}\n          />\n        )}\n\n        {this.state.visiblePosts.map((post, i) => (\n          <div\n            className=\"post-item\"\n            key={post.id}\n          >\n            <UserInfo\n              key={post.user.id}\n              user={post.user}\n            />\n\n            <div className=\"user-post\">\n              <UserPost\n                post={post}\n                showComments={this.state.showComments[i]}\n                onClick={this.showCommentClick}\n                postIndex={i}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport PostList from './PostList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">List of posts</h1>\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}